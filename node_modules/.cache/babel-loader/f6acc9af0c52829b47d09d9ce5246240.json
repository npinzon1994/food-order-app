{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react_practice\\\\udemy-projects-again\\\\food-order-app\\\\src\\\\components\\\\Meals\\\\MealItem\\\\MealItemForm.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, Fragment } from \"react\";\nimport classes from \"./MealItemForm.module.css\";\nimport Input from \"../../UI/Input\";\nimport Modal from \"../../UI/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealItemForm = props => {\n  _s();\n  const quantityInputRef = useRef();\n  const [isErrorModalVisible, setIsErrorModalVisible] = useState(false);\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredQuantity = quantityInputRef.current.value;\n    const enteredQuantityNumber = +enteredQuantity;\n    if (enteredQuantity.trim().length === 0 || enteredQuantityNumber < 1 || enteredQuantityNumber > 10) {\n      setIsErrorModalVisible(true);\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [!isErrorModalVisible && /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: quantityInputRef,\n        label: \"Amount\",\n        input: {\n          id: \"amount\" + props.id,\n          //Appending same id from mealItem to make all inputs unique.\n          //Otherwise, all of them would have the same id of 'amount'\n          type: \"number\",\n          min: \"1\",\n          max: \"10\",\n          step: \"1\",\n          defaultValue: \"1\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: props.type,\n        children: \"+ Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(MealItemForm, \"oQB4QLcw9mALQVeh3ZQlkbBCD0k=\");\n_c = MealItemForm;\nexport default MealItemForm;\nvar _c;\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"names":["React","useRef","useState","Fragment","classes","Input","Modal","MealItemForm","props","quantityInputRef","isErrorModalVisible","setIsErrorModalVisible","submitHandler","event","preventDefault","enteredQuantity","current","value","enteredQuantityNumber","trim","length","form","id","type","min","max","step","defaultValue"],"sources":["C:/workspace/react_practice/udemy-projects-again/food-order-app/src/components/Meals/MealItem/MealItemForm.js"],"sourcesContent":["import React, { useRef, useState, Fragment } from \"react\";\r\nimport classes from \"./MealItemForm.module.css\";\r\nimport Input from \"../../UI/Input\";\r\nimport Modal from \"../../UI/Modal\";\r\n\r\nconst MealItemForm = (props) => {\r\n  const quantityInputRef = useRef();\r\n  const [isErrorModalVisible, setIsErrorModalVisible] = useState(false);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredQuantity = quantityInputRef.current.value;\r\n    const enteredQuantityNumber = +enteredQuantity;\r\n\r\n    if (\r\n      enteredQuantity.trim().length === 0 ||\r\n      enteredQuantityNumber < 1 ||\r\n      enteredQuantityNumber > 10\r\n    ) {\r\n        setIsErrorModalVisible(true);\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    {!isErrorModalVisible && <Modal />}\r\n    <form className={classes.form} onSubmit={submitHandler}>\r\n      {/*Now we can add whichever props we want in our object being fed through input prop*/}\r\n      <Input\r\n        ref={quantityInputRef}\r\n        label=\"Amount\"\r\n        input={{\r\n          id: \"amount\" + props.id, //Appending same id from mealItem to make all inputs unique.\r\n          //Otherwise, all of them would have the same id of 'amount'\r\n          type: \"number\",\r\n          min: \"1\",\r\n          max: \"10\",\r\n          step: \"1\",\r\n          defaultValue: \"1\",\r\n        }}\r\n      />\r\n      <button type={props.type}>+ Add</button>\r\n    </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MealItemForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AACzD,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,KAAK,MAAM,gBAAgB;AAAC;AAEnC,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAMC,gBAAgB,GAAGR,MAAM,EAAE;EACjC,MAAM,CAACS,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAErE,MAAMU,aAAa,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,eAAe,GAAGN,gBAAgB,CAACO,OAAO,CAACC,KAAK;IACtD,MAAMC,qBAAqB,GAAG,CAACH,eAAe;IAE9C,IACEA,eAAe,CAACI,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,IACnCF,qBAAqB,GAAG,CAAC,IACzBA,qBAAqB,GAAG,EAAE,EAC1B;MACEP,sBAAsB,CAAC,IAAI,CAAC;MAC5B;IACJ;EACF,CAAC;EAED,oBACE,QAAC,QAAQ;IAAA,WACR,CAACD,mBAAmB,iBAAI,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eAClC;MAAM,SAAS,EAAEN,OAAO,CAACiB,IAAK;MAAC,QAAQ,EAAET,aAAc;MAAA,wBAErD,QAAC,KAAK;QACJ,GAAG,EAAEH,gBAAiB;QACtB,KAAK,EAAC,QAAQ;QACd,KAAK,EAAE;UACLa,EAAE,EAAE,QAAQ,GAAGd,KAAK,CAACc,EAAE;UAAE;UACzB;UACAC,IAAI,EAAE,QAAQ;UACdC,GAAG,EAAE,GAAG;UACRC,GAAG,EAAE,IAAI;UACTC,IAAI,EAAE,GAAG;UACTC,YAAY,EAAE;QAChB;MAAE;QAAA;QAAA;QAAA;MAAA,QACF,eACF;QAAQ,IAAI,EAAEnB,KAAK,CAACe,IAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe;IAAA;MAAA;MAAA;MAAA;IAAA,QACnC;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEf,CAAC;AAAC,GA1CIhB,YAAY;AAAA,KAAZA,YAAY;AA4ClB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react_practice\\\\udemy-projects-again\\\\food-order-app\\\\src\\\\context\\\\cart-item-context.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartItemContext = /*#__PURE__*/React.createContext({\n  quantity: \"1\",\n  totalQuantity: \"1\" //just only added this here\n  //   cartItem: {\n  //     name: \"\",\n  //     price: \"\",\n  //     quantity: \"\",\n  //     onRemove: () => {},\n  //     onAdd: () => {},\n  //   },\n  //   onSetInputValue: () => {},\n});\n\nconst cartReducerFunction = (state, action) => {\n  const updatedTotalQuantity = state.totalQuantity + state.quantity;\n  return {\n    quantity: action.val,\n    totalQuantity: updatedTotalQuantity\n  };\n};\nexport const CartItemContextProvider = props => {\n  _s();\n  /*\r\n    CartItem props -> name, price, quantity, onRemove, onAdd\r\n      useReducer will hold an object in our state snapshots w the following properties:\r\n    -------------------------\r\n    inputValue\r\n    totalValue\r\n    */\n\n  const [cartItemState, dispatchCartItem] = useReducer(cartReducerFunction, {\n    quantity: \"1\",\n    totalQuantity: \"1\"\n  });\n  const addItemHandler = () => {};\n  const removeItemHandler = () => {};\n  return /*#__PURE__*/_jsxDEV(CartItemContext.Provider, {\n    value: {\n      quantity: cartItemState.quantity,\n      totalQuantity: cartItemState.totalQuantity\n      // onDispatchCartItem: dispatchCartItem({val: \"\"}), //this is the line that is causing an infinite loop of re-renders\n\n      // inputValue: inputValue,\n      // onSetInputValue: setInputValue,\n      // cartItem: {\n      //   name: cartItemState.name,\n      //   price: cartItemState.price,\n      //   quantity: cartItemState.quantity,\n      //   onRemove: removeItemHandler,\n      //   onAdd: addItemHandler,\n      // },\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(CartItemContextProvider, \"H1xds9bjkF8ahuiVwgcN8JFDqD0=\");\n_c = CartItemContextProvider;\nexport default CartItemContext;\nvar _c;\n$RefreshReg$(_c, \"CartItemContextProvider\");","map":{"version":3,"names":["React","useReducer","CartItemContext","createContext","quantity","totalQuantity","cartReducerFunction","state","action","updatedTotalQuantity","val","CartItemContextProvider","props","cartItemState","dispatchCartItem","addItemHandler","removeItemHandler","children"],"sources":["C:/workspace/react_practice/udemy-projects-again/food-order-app/src/context/cart-item-context.js"],"sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nconst CartItemContext = React.createContext({\r\n  quantity: \"1\",\r\n  totalQuantity: \"1\", //just only added this here\r\n  //   cartItem: {\r\n  //     name: \"\",\r\n  //     price: \"\",\r\n  //     quantity: \"\",\r\n  //     onRemove: () => {},\r\n  //     onAdd: () => {},\r\n  //   },\r\n  //   onSetInputValue: () => {},\r\n});\r\n\r\nconst cartReducerFunction = (state, action) => {\r\n  const updatedTotalQuantity = state.totalQuantity + state.quantity;\r\n  return { quantity: action.val, totalQuantity:  updatedTotalQuantity};\r\n};\r\n\r\nexport const CartItemContextProvider = (props) => {\r\n  /*\r\n    CartItem props -> name, price, quantity, onRemove, onAdd\r\n\r\n    useReducer will hold an object in our state snapshots w the following properties:\r\n    -------------------------\r\n    inputValue\r\n    totalValue\r\n    */\r\n\r\n  const [cartItemState, dispatchCartItem] = useReducer(cartReducerFunction, {\r\n    quantity: \"1\",\r\n    totalQuantity: \"1\",\r\n  });\r\n\r\n  const addItemHandler = () => {};\r\n\r\n  const removeItemHandler = () => {};\r\n\r\n  return (\r\n    <CartItemContext.Provider\r\n      value={\r\n        \r\n        {\r\n        quantity: cartItemState.quantity,\r\n        totalQuantity: cartItemState.totalQuantity,\r\n        // onDispatchCartItem: dispatchCartItem({val: \"\"}), //this is the line that is causing an infinite loop of re-renders\r\n\r\n        // inputValue: inputValue,\r\n        // onSetInputValue: setInputValue,\r\n        // cartItem: {\r\n        //   name: cartItemState.name,\r\n        //   price: cartItemState.price,\r\n        //   quantity: cartItemState.quantity,\r\n        //   onRemove: removeItemHandler,\r\n        //   onAdd: addItemHandler,\r\n        // },\r\n      }\r\n    \r\n    }\r\n    >\r\n      {props.children}\r\n    </CartItemContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartItemContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAAC;AAE1C,MAAMC,eAAe,gBAAGF,KAAK,CAACG,aAAa,CAAC;EAC1CC,QAAQ,EAAE,GAAG;EACbC,aAAa,EAAE,GAAG,CAAE;EACpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CAAC;;AAEF,MAAMC,mBAAmB,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC7C,MAAMC,oBAAoB,GAAGF,KAAK,CAACF,aAAa,GAAGE,KAAK,CAACH,QAAQ;EACjE,OAAO;IAAEA,QAAQ,EAAEI,MAAM,CAACE,GAAG;IAAEL,aAAa,EAAGI;EAAoB,CAAC;AACtE,CAAC;AAED,OAAO,MAAME,uBAAuB,GAAIC,KAAK,IAAK;EAAA;EAChD;AACF;AACA;AACA;AACA;AACA;AACA;;EAGE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,UAAU,CAACK,mBAAmB,EAAE;IACxEF,QAAQ,EAAE,GAAG;IACbC,aAAa,EAAE;EACjB,CAAC,CAAC;EAEF,MAAMU,cAAc,GAAG,MAAM,CAAC,CAAC;EAE/B,MAAMC,iBAAiB,GAAG,MAAM,CAAC,CAAC;EAElC,oBACE,QAAC,eAAe,CAAC,QAAQ;IACvB,KAAK,EAEH;MACAZ,QAAQ,EAAES,aAAa,CAACT,QAAQ;MAChCC,aAAa,EAAEQ,aAAa,CAACR;MAC7B;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAED;IAAA,UAEEO,KAAK,CAACK;EAAQ;IAAA;IAAA;IAAA;EAAA,QACU;AAE/B,CAAC;AAAC,GA5CWN,uBAAuB;AAAA,KAAvBA,uBAAuB;AA8CpC,eAAeT,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
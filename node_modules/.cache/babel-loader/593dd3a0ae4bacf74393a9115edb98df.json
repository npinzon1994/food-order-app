{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react_practice\\\\udemy-projects-again\\\\food-order-app\\\\src\\\\components\\\\Cart\\\\CheckoutForm.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../../hooks/use-input\";\nimport classes from \"./CheckoutForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isNotEmpty = value => value.trim() !== \"\";\nconst hasFiveDigits = value => value.trim().length === 5;\nconst CheckoutForm = props => {\n  _s();\n  const {\n    enteredValue: enteredName,\n    inputIsValid: nameIsValid,\n    hasError: nameHasError,\n    inputChangeHandler: nameChangeHandler,\n    inputOnBlurHandler: nameOnBlurHandler,\n    reset: resetName\n  } = useInput(isNotEmpty);\n  const {\n    enteredValue: enteredStreet,\n    inputIsValid: streetIsValid,\n    hasError: streetHasError,\n    inputChangeHandler: streetChangeHandler,\n    inputOnBlurHandler: streetOnBlurHandler,\n    reset: resetStreet\n  } = useInput(isNotEmpty);\n  const {\n    enteredValue: enteredCity,\n    inputIsValid: cityIsValid,\n    hasError: cityHasError,\n    inputChangeHandler: cityChangeHandler,\n    inputOnBlurHandler: cityOnBlurHandler,\n    reset: resetCity\n  } = useInput(isNotEmpty);\n  const {\n    enteredValue: enteredZip,\n    inputIsValid: zipIsValid,\n    hasError: zipHasError,\n    inputChangeHandler: zipChangeHandler,\n    inputOnBlurHandler: zipOnBlurHandler,\n    reset: resetZip\n  } = useInput(hasFiveDigits);\n  const formIsValid = nameIsValid && streetIsValid && zipIsValid && cityIsValid;\n  const confirmHandler = event => {\n    event.preventDefault();\n    if (!formIsValid) {\n      return;\n    }\n\n    //submit cart data\n    const userData = {\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      zip: enteredZip\n    };\n    props.onSubmitOrder(userData);\n    resetName();\n    resetStreet();\n    resetCity();\n    resetZip();\n  };\n  const nameControlClasses = `${classes.control} ${!nameHasError ? \"\" : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${!streetHasError ? \"\" : classes.invalid}`;\n  const zipControlClasses = `${classes.control} ${!zipHasError ? \"\" : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${!cityHasError ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameOnBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name cannot be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        onChange: streetChangeHandler,\n        onBlur: streetOnBlurHandler,\n        value: enteredStreet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), streetHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Street address cannot be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: zipControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"zip\",\n        children: \"Zip Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"zip\",\n        onChange: zipChangeHandler,\n        onBlur: zipOnBlurHandler,\n        value: enteredZip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), zipHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid zip code (5 characters long)!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        onChange: cityChangeHandler,\n        onBlur: cityOnBlurHandler,\n        value: enteredCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), cityHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"City cannot be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"3J7FLgNUgsmBMnhzojKAy8Bfumk=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["useInput","classes","isNotEmpty","value","trim","hasFiveDigits","length","CheckoutForm","props","enteredValue","enteredName","inputIsValid","nameIsValid","hasError","nameHasError","inputChangeHandler","nameChangeHandler","inputOnBlurHandler","nameOnBlurHandler","reset","resetName","enteredStreet","streetIsValid","streetHasError","streetChangeHandler","streetOnBlurHandler","resetStreet","enteredCity","cityIsValid","cityHasError","cityChangeHandler","cityOnBlurHandler","resetCity","enteredZip","zipIsValid","zipHasError","zipChangeHandler","zipOnBlurHandler","resetZip","formIsValid","confirmHandler","event","preventDefault","userData","name","street","city","zip","onSubmitOrder","nameControlClasses","control","invalid","streetControlClasses","zipControlClasses","cityControlClasses","form","actions","onClose","submit"],"sources":["C:/workspace/react_practice/udemy-projects-again/food-order-app/src/components/Cart/CheckoutForm.js"],"sourcesContent":["import useInput from \"../../hooks/use-input\";\r\nimport classes from \"./CheckoutForm.module.css\";\r\n\r\nconst isNotEmpty = (value) => value.trim() !== \"\";\r\nconst hasFiveDigits = (value) => value.trim().length === 5;\r\n\r\nconst CheckoutForm = (props) => {\r\n  const {\r\n    enteredValue: enteredName,\r\n    inputIsValid: nameIsValid,\r\n    hasError: nameHasError,\r\n    inputChangeHandler: nameChangeHandler,\r\n    inputOnBlurHandler: nameOnBlurHandler,\r\n    reset: resetName,\r\n  } = useInput(isNotEmpty);\r\n\r\n  const {\r\n    enteredValue: enteredStreet,\r\n    inputIsValid: streetIsValid,\r\n    hasError: streetHasError,\r\n    inputChangeHandler: streetChangeHandler,\r\n    inputOnBlurHandler: streetOnBlurHandler,\r\n    reset: resetStreet,\r\n  } = useInput(isNotEmpty);\r\n\r\n  const {\r\n    enteredValue: enteredCity,\r\n    inputIsValid: cityIsValid,\r\n    hasError: cityHasError,\r\n    inputChangeHandler: cityChangeHandler,\r\n    inputOnBlurHandler: cityOnBlurHandler,\r\n    reset: resetCity,\r\n  } = useInput(isNotEmpty);\r\n\r\n  const {\r\n    enteredValue: enteredZip,\r\n    inputIsValid: zipIsValid,\r\n    hasError: zipHasError,\r\n    inputChangeHandler: zipChangeHandler,\r\n    inputOnBlurHandler: zipOnBlurHandler,\r\n    reset: resetZip,\r\n  } = useInput(hasFiveDigits);\r\n\r\n  const formIsValid = nameIsValid && streetIsValid && zipIsValid && cityIsValid;\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    //submit cart data\r\n    const userData = {\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      city: enteredCity,\r\n      zip: enteredZip\r\n    }\r\n\r\n    props.onSubmitOrder(userData);\r\n    resetName();\r\n    resetStreet();\r\n    resetCity();\r\n    resetZip();\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${\r\n    !nameHasError ? \"\" : classes.invalid\r\n  }`;\r\n  const streetControlClasses = `${classes.control} ${\r\n    !streetHasError ? \"\" : classes.invalid\r\n  }`;\r\n  const zipControlClasses = `${classes.control} ${\r\n    !zipHasError ? \"\" : classes.invalid\r\n  }`;\r\n  const cityControlClasses = `${classes.control} ${\r\n    !cityHasError ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={nameChangeHandler}\r\n          onBlur={nameOnBlurHandler}\r\n          value={enteredName}\r\n        />\r\n        {nameHasError && <p>Name cannot be empty!</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"street\"\r\n          onChange={streetChangeHandler}\r\n          onBlur={streetOnBlurHandler}\r\n          value={enteredStreet}\r\n        />\r\n        {streetHasError && <p>Street address cannot be empty!</p>}\r\n      </div>\r\n      <div className={zipControlClasses}>\r\n        <label htmlFor=\"zip\">Zip Code</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"zip\"\r\n          onChange={zipChangeHandler}\r\n          onBlur={zipOnBlurHandler}\r\n          value={enteredZip}\r\n        />\r\n        {zipHasError && (\r\n          <p>Please enter a valid zip code (5 characters long)!</p>\r\n        )}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"city\"\r\n          onChange={cityChangeHandler}\r\n          onBlur={cityOnBlurHandler}\r\n          value={enteredCity}\r\n        />\r\n        {cityHasError && <p>City cannot be empty!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onClose}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
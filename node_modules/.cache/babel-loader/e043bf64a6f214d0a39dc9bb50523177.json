{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react_practice\\\\udemy-projects-again\\\\food-order-app\\\\src\\\\context\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalPrice: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    /*\r\n    Where is the current item coming from? -- action.item\r\n    \r\n    How do we go about adding said item to our context array?\r\n    -We need to access the defaultCartState's items [] and\r\n     insert action.item there\r\n      \r\n     Next check if action.item.id exists in array\r\n    */\n    //concat() returns a new array with the argument appended to the end\n    const updatedItems = state.items.concat(action.item);\n    if (!defaultCartState.items.includes(action.item)) {\n      /*Now we've determined the array DOES NOT include our item\r\n      \r\n      Now we just need to insert this item at the beginning\r\n      of our defaultCartState.items and add that item's quantity\r\n      to defaultCartState.totalQuantity*/\n    } else {}\n  }\n  if (action.type === \"REMOVE\") {}\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  //this provides the concrete context object we'll be working with\n\n  /*\r\n    This is where useReducer goes. The action.type will check\r\n    if the current item we're adding is aready in the cart or\r\n    not. If no, we add the item to our items array. If yes, then\r\n    we just update that item's quantity.\r\n    */\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalPrice: cartState.totalPrice,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalPrice","cartReducer","state","action","type","updatedItems","concat","item","includes","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"sources":["C:/workspace/react_practice/udemy-projects-again/food-order-app/src/context/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalPrice: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if(action.type === \"ADD\"){\r\n    /*\r\n    Where is the current item coming from? -- action.item\r\n    \r\n    How do we go about adding said item to our context array?\r\n    -We need to access the defaultCartState's items [] and\r\n     insert action.item there\r\n\r\n    \r\n     Next check if action.item.id exists in array\r\n    */\r\n   //concat() returns a new array with the argument appended to the end\r\n   const updatedItems = state.items.concat(action.item);\r\n    if(!defaultCartState.items.includes(action.item)){\r\n      /*Now we've determined the array DOES NOT include our item\r\n      \r\n      Now we just need to insert this item at the beginning\r\n      of our defaultCartState.items and add that item's quantity\r\n      to defaultCartState.totalQuantity*/\r\n\r\n    } else {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  if(action.type === \"REMOVE\"){\r\n\r\n  }\r\n  \r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  //this provides the concrete context object we'll be working with\r\n\r\n  /*\r\n    This is where useReducer goes. The action.type will check\r\n    if the current item we're adding is aready in the cart or\r\n    not. If no, we add the item to our items array. If yes, then\r\n    we just update that item's quantity.\r\n    */\r\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({type: \"REMOVE\", id: id});\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalPrice: cartState.totalPrice,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,gBAAgB;AAAC;AAEzC,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,IAAGA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAC;IACvB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAEG;IACA,MAAMC,YAAY,GAAGH,KAAK,CAACH,KAAK,CAACO,MAAM,CAACH,MAAM,CAACI,IAAI,CAAC;IACnD,IAAG,CAACT,gBAAgB,CAACC,KAAK,CAACS,QAAQ,CAACL,MAAM,CAACI,IAAI,CAAC,EAAC;MAC/C;AACN;AACA;AACA;AACA;IAJM,CAMD,MAAM,CAEP;EAEF;EAEA,IAAGJ,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAC,CAE5B;EAEA,OAAON,gBAAgB;AACzB,CAAC;AAED,MAAMW,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC9B;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGhB,UAAU,CAACK,WAAW,EAAEH,gBAAgB,CAAC;EAEjF,MAAMe,oBAAoB,GAAIN,IAAI,IAAK;IACrCK,kBAAkB,CAAC;MAAER,IAAI,EAAE,KAAK;MAAEG,IAAI,EAAEA;IAAK,CAAC,CAAC;EACjD,CAAC;EAED,MAAMO,yBAAyB,GAAIC,EAAE,IAAK;IACxCH,kBAAkB,CAAC;MAACR,IAAI,EAAE,QAAQ;MAAEW,EAAE,EAAEA;IAAE,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMC,WAAW,GAAG;IAClBjB,KAAK,EAAEY,SAAS,CAACZ,KAAK;IACtBC,UAAU,EAAEW,SAAS,CAACX,UAAU;IAChCiB,OAAO,EAAEJ,oBAAoB;IAC7BK,UAAU,EAAEJ;EACd,CAAC;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEE,WAAY;IAAA,UACtCN,KAAK,CAACS;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B,CAAC;AAAC,GA/BIV,YAAY;AAAA,KAAZA,YAAY;AAiClB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
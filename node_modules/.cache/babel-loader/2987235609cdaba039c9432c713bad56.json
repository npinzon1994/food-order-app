{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react_practice\\\\udemy-projects-again\\\\food-order-app\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [meals, setMeals] = useState([]);\n  const fetchMeals = useCallback(async () => {\n    try {\n      const response = await fetch(\"https://food-order-app-be8a0-default-rtdb.firebaseio.com/\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const data = await response.json();\n\n      //pull all data into an array of JS objects\n      const loadedMeals = [];\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n      setMeals(loadedMeals);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  }, []);\n  useEffect(() => {\n    fetchMeals();\n  }, [fetchMeals]);\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: classes['big-text'],\n    children: \"Found no meals.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 17\n  }, this);\n  if (meals.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: mealsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes['big-text'],\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.meals,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes['big-text'],\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n  //helper function to make return statement leaner\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.meals,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableMeals, \"hR4noaT/Z33k2/sNZnSLxADkNH0=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","classes","Card","MealItem","AvailableMeals","isLoading","setIsLoading","error","setError","meals","setMeals","fetchMeals","response","fetch","ok","Error","data","json","loadedMeals","key","push","id","name","description","price","message","content","length","mealsList","map","meal"],"sources":["C:/workspace/react_practice/udemy-projects-again/food-order-app/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\n\r\nconst AvailableMeals = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [meals, setMeals] = useState([]);\r\n\r\n  const fetchMeals = useCallback(async() => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://food-order-app-be8a0-default-rtdb.firebaseio.com/\"\r\n      );\r\n\r\n      if(!response.ok){\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n  \r\n      //pull all data into an array of JS objects\r\n      const loadedMeals = [];\r\n      for (const key in data) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: data[key].name,\r\n          description: data[key].description,\r\n          price: data[key].price,\r\n        });\r\n      }\r\n      setMeals(loadedMeals);\r\n    } catch(error){\r\n      setIsLoading(false);\r\n      setError(error.message);\r\n    }\r\n    \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMeals();\r\n  }, [fetchMeals]);\r\n\r\n  \r\n  let content = <p className={classes['big-text']}>Found no meals.</p>\r\n  if(meals.length > 0) {\r\n    content = <ul>{mealsList}</ul>;\r\n  }\r\n  if(error) {\r\n    content = <p className={classes['big-text']}>{error}</p>\r\n  }\r\n  if(isLoading){\r\n    return <Card className={classes.meals}>\r\n      <p className={classes['big-text']}>Loading...</p>\r\n    </Card>\r\n  }\r\n  \r\n  //helper function to make return statement leaner\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      id={meal.id}\r\n      key={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <Card className={classes.meals}>\r\n      {content}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
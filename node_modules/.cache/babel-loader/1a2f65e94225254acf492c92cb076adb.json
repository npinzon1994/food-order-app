{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react_practice\\\\udemy-projects-again\\\\food-order-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from \"react\";\nimport Header from \"./components/Layout/Header\";\nimport Meals from \"./components/Meals/Meals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\n   I need to update the totalQuantity based on what we get\n   from our cartItemContext inputValue.\n    I can use a useReducer which will handle both the individual\n   quantity as well as the total quantity, and our object itself.\n   This useReducer can go in our context so we can use it anywhere.\n   */\n  const [isCartVisible, setIsCartVisible] = useState(false);\n  const quantityContext = useContext(CartItemContext);\n  const showCartHandler = () => {\n    if (quantityContext.totalQuantity > 0) {\n      setIsCartVisible(true);\n    }\n  };\n  const hideCartHandler = () => {\n    setIsCartVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [isCartVisible && /*#__PURE__*/_jsxDEV(Cart, {\n      onClose: hideCartHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Meals, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fSQu15qcEeUZ+JBoPYLgo7QoDHU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","Header","Meals","App","isCartVisible","setIsCartVisible","useState","quantityContext","useContext","CartItemContext","showCartHandler","totalQuantity","hideCartHandler"],"sources":["C:/workspace/react_practice/udemy-projects-again/food-order-app/src/App.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport Header from \"./components/Layout/Header\";\nimport Meals from \"./components/Meals/Meals\";\n\nfunction App() {\n  \n /*\n  I need to update the totalQuantity based on what we get\n  from our cartItemContext inputValue.\n\n  I can use a useReducer which will handle both the individual\n  quantity as well as the total quantity, and our object itself.\n  This useReducer can go in our context so we can use it anywhere.\n  */\n  const [isCartVisible, setIsCartVisible] = useState(false);\n  const quantityContext = useContext(CartItemContext);\n\n  const showCartHandler = () => {\n    if (quantityContext.totalQuantity > 0) {\n      setIsCartVisible(true);\n    }\n  };\n\n  const hideCartHandler = () => {\n    setIsCartVisible(false);\n  };\n\n  return (\n    <Fragment>\n      {isCartVisible && <Cart onClose={hideCartHandler}></Cart>}\n      <Header/>\n      <main>\n        <Meals />\n      </main>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,MAAM,0BAA0B;AAAC;AAE7C,SAASC,GAAG,GAAG;EAAA;EAEd;AACD;AACA;AACA;AACA;AACA;AACA;EAEE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMC,eAAe,GAAGC,UAAU,CAACC,eAAe,CAAC;EAEnD,MAAMC,eAAe,GAAG,MAAM;IAC5B,IAAIH,eAAe,CAACI,aAAa,GAAG,CAAC,EAAE;MACrCN,gBAAgB,CAAC,IAAI,CAAC;IACxB;EACF,CAAC;EAED,MAAMO,eAAe,GAAG,MAAM;IAC5BP,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBACE,QAAC,QAAQ;IAAA,WACND,aAAa,iBAAI,QAAC,IAAI;MAAC,OAAO,EAAEQ;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAQ,eACzD,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACT;MAAA,uBACE,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEf;AAAC,GAhCQT,GAAG;AAAA,KAAHA,GAAG;AAkCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react_practice\\\\udemy-projects-again\\\\food-order-app\\\\src\\\\components\\\\Layout\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useContext, useState } from \"react\";\nimport classes from \"./Header.module.css\";\nimport HeaderCartButton from \"./HeaderCartButton\";\nimport mainImg from \"../../images/meals.jpg\";\nimport Modal from \"../UI/Modal\";\nimport Cart from \"../Cart/Cart\";\nimport CartItemContext from \"../../context/cart-item-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = props => {\n  _s();\n  /*\r\n  I need to update the totalQuantity based on what we get\r\n  from our cartItemContext inputValue.\r\n    I can use a useReducer which will handle both the individual\r\n  quantity as well as the total quantity, and our object itself.\r\n  This useReducer can go in our context so we can use it anywhere.\r\n  */\n  const [isCartVisible, setIsCartVisible] = useState(false);\n  const quantityContext = useContext(CartItemContext);\n  const showCartHandler = () => {\n    if (totalQuantity > 0) {\n      setIsCartVisible(true);\n    }\n  };\n  const hideCartHandler = () => {\n    setIsCartVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [isCartVisible && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: hideCartHandler,\n      children: /*#__PURE__*/_jsxDEV(Cart, {\n        onClose: hideCartHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: classes.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ReactMeals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeaderCartButton, {\n        onClick: showCartHandler,\n        totalQuantity: totalQuantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"main-image\"],\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mainImg,\n        alt: \"food laid out on buffet table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"fSQu15qcEeUZ+JBoPYLgo7QoDHU=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","Fragment","useContext","useState","classes","HeaderCartButton","mainImg","Modal","Cart","CartItemContext","Header","props","isCartVisible","setIsCartVisible","quantityContext","showCartHandler","totalQuantity","hideCartHandler","header"],"sources":["C:/workspace/react_practice/udemy-projects-again/food-order-app/src/components/Layout/Header.js"],"sourcesContent":["import React, { Fragment, useContext, useState } from \"react\";\r\nimport classes from \"./Header.module.css\";\r\nimport HeaderCartButton from \"./HeaderCartButton\";\r\nimport mainImg from \"../../images/meals.jpg\";\r\nimport Modal from \"../UI/Modal\";\r\nimport Cart from \"../Cart/Cart\";\r\nimport CartItemContext from \"../../context/cart-item-context\";\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n  /*\r\n  I need to update the totalQuantity based on what we get\r\n  from our cartItemContext inputValue.\r\n\r\n  I can use a useReducer which will handle both the individual\r\n  quantity as well as the total quantity, and our object itself.\r\n  This useReducer can go in our context so we can use it anywhere.\r\n  */\r\n  const [isCartVisible, setIsCartVisible] = useState(false);\r\n  const quantityContext = useContext(CartItemContext);\r\n\r\n  const showCartHandler = () => {\r\n    if (totalQuantity > 0) {\r\n      setIsCartVisible(true);\r\n    }\r\n  };\r\n\r\n  const hideCartHandler = () => {\r\n    setIsCartVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isCartVisible && (\r\n        <Modal onClose={hideCartHandler}>\r\n          <Cart onClose={hideCartHandler}></Cart>\r\n        </Modal>\r\n      )}\r\n      <header className={classes.header}>\r\n        <h1>ReactMeals</h1>\r\n        <HeaderCartButton\r\n          onClick={showCartHandler}\r\n          totalQuantity={totalQuantity}\r\n        />\r\n      </header>\r\n      <div className={classes[\"main-image\"]}>\r\n        <img src={mainImg} alt=\"food laid out on buffet table\" />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC7D,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,eAAe,MAAM,iCAAiC;AAAC;AAG9D,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAA;EAExB;AACF;AACA;AACA;AACA;AACA;AACA;EAEE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMW,eAAe,GAAGZ,UAAU,CAACO,eAAe,CAAC;EAEnD,MAAMM,eAAe,GAAG,MAAM;IAC5B,IAAIC,aAAa,GAAG,CAAC,EAAE;MACrBH,gBAAgB,CAAC,IAAI,CAAC;IACxB;EACF,CAAC;EAED,MAAMI,eAAe,GAAG,MAAM;IAC5BJ,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBACE,QAAC,QAAQ;IAAA,WACND,aAAa,iBACZ,QAAC,KAAK;MAAC,OAAO,EAAEK,eAAgB;MAAA,uBAC9B,QAAC,IAAI;QAAC,OAAO,EAAEA;MAAgB;QAAA;QAAA;QAAA;MAAA;IAAQ;MAAA;MAAA;MAAA;IAAA,QAE1C,eACD;MAAQ,SAAS,EAAEb,OAAO,CAACc,MAAO;MAAA,wBAChC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,eACnB,QAAC,gBAAgB;QACf,OAAO,EAAEH,eAAgB;QACzB,aAAa,EAAEC;MAAc;QAAA;QAAA;QAAA;MAAA,QAC7B;IAAA;MAAA;MAAA;MAAA;IAAA,QACK,eACT;MAAK,SAAS,EAAEZ,OAAO,CAAC,YAAY,CAAE;MAAA,uBACpC;QAAK,GAAG,EAAEE,OAAQ;QAAC,GAAG,EAAC;MAA+B;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACrD;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEf,CAAC;AAAC,GA1CII,MAAM;AAAA,KAANA,MAAM;AA4CZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}